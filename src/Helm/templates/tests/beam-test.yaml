{{- if .Values.enableTests }}
{{- if .Values.extra.pulsarBeam }}
{{- if not .Values.enableTls }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ template "pulsar.fullname" . }}-beam-test-file"
data:
  test.sh: |-
    #!/bin/bash

    exit_if_error() {
      local exit_code=$1
      shift
      [[ $exit_code ]] &&               # do nothing if no error code passed
        ((exit_code != 0)) && {         # do nothing if error code is 0
          printf 'ERROR: %s\n' "$@" >&2 # we can use better logging here
          exit "$exit_code"             # we could also check to make sure
                                        # error code is numeric when passed
        }
    }

    ADM_CMD=/pulsar/bin/pulsar-admin
    PERF_CMD=/pulsar/bin/pulsar-perf
    CLIENT_CMD=/pulsar/bin/pulsar-client
    TOPIC=public/default/beamtest
    SUBSCRIPTION=sub

    echo "Create subscription"
    $ADM_CMD topics create-subscription -s $SUBSCRIPTION $TOPIC
    exit_if_error $? "Create subscription failed"

    echo "Send 3 messages using curl"
    curl -q -X POST -H "TopicFn: $TOPIC"  -d "message 1" http://{{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}:8085/v1/firehose
    curl -q -X POST -H "TopicFn: $TOPIC"  -d "message 2" http://{{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}:8085/v1/firehose
    curl -q -X POST -H "TopicFn: $TOPIC"  -d "message 3" http://{{ template "pulsar.fullname" . }}-{{ .Values.proxy.component }}:8085/v1/firehose
    exit_if_error $? "Sending e messages using curl failed"

    echo "Consume the messages"
    $CLIENT_CMD consume -n 3 -s $SUBSCRIPTION $TOPIC > /dev/null
    exit_if_error $? "Consuming messages failed"

    echo "Delete topic. Need to force delete because Beam maintains a producer."
    $ADM_CMD topics delete $TOPIC --force
    exit_if_error $? "Deleting the topic failed"

    # If we made it to here, all good
    exit 0

---
apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-test-beam"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: "{{ template "pulsar.fullname" . }}-test-beam-plain-text"
    image: "{{ .Values.image.bastion.repository }}:{{ .Values.image.bastion.tag }}"
    imagePullPolicy: {{ .Values.image.bastion.pullPolicy }}
    command: ["sh", "-c"]
    args:
    - >
          bin/apply-config-from-env.py conf/client.conf &&
          /pulsar/tests/test.sh
    env:
    - name: webServiceUrl
      value: http://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:8080/
    - name: brokerServiceUrl
      value: pulsar://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:6650/
    volumeMounts:
      - name: test-scripts
        mountPath: /pulsar/tests
    
  # Do not restart containers after they exit
  restartPolicy: Never
  volumes:
    - name: test-scripts
      configMap:
        name: "{{ template "pulsar.fullname" . }}-beam-test-file"
        defaultMode: 0744
{{- end }}
{{- end }}
{{- end }}